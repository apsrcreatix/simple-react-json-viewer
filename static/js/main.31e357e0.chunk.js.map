{"version":3,"sources":["JsonViewer/UrlInputForm/UrlInputForm.module.css","JsonViewer/Json.module.css","JsonViewer/FoldableJson/FoldableJson.module.css","JsonViewer/api/api.js","JsonViewer/utils/utils.js","JsonViewer/FoldableJson/JsonObject.js","JsonViewer/FoldableJson/FoldableJson.js","JsonViewer/UrlInputForm/UrlInputForm.js","JsonViewer/JsonViewer.js","App.js","index.js"],"names":["module","exports","input","btn","form","component","container","json","subTree","key","keyEmpty","keyFoldable","keyMinus","folded","MOCK_JSON","name","nested","obj","a","b","c","arr","arrObj","d","e","f","m","isPrimitiveType","val","JsonObject","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","isPrimitiveArray","className","props","react_default","createElement","join","styles","map","el","i","lastElement","length","FoldableJson_FoldableJson","showComma","keysArr","keys","keyName","isLink","test","toString","href","Array","isArray","renderArray","renderPrimitive","renderObject","React","Component","FoldableJson","_this","call","state","newProps","newState","isPrimitive","setState","s","dotsClass","classnames","defineProperty","foldedInfo","concat","_classnames2","isFoldable","keyClass","onClick","fold","bind","_this$props","undefined","jsonClass","renderKey","renderFoldedData","JsonObject_JsonObject","UrlInputForm","handleChange","assertThisInitialized","handleSubmit","onFormSubmitted","event","target","preventDefault","onSubmit","placeholder","type","onChange","JsonViewer","onDataLoaded","t","error","loading","onError","handleFormSubmitted","src","url","Promise","race","axios","get","resolve","reject","wait","setTimeout","clearTimeout","then","response","data","catch","UrlInputForm_UrlInputForm","renderLoader","renderData","App","JsonViewer_JsonViewer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.31e357e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"UrlInputForm_input__3ehX6\",\"btn\":\"UrlInputForm_btn__2jwbb\",\"form\":\"UrlInputForm_form__1ADJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Json_component__1Z-Ub\",\"container\":\"Json_container__2RChZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"json\":\"FoldableJson_json__3lBjf\",\"subTree\":\"FoldableJson_subTree__24GGd\",\"key\":\"FoldableJson_key__oO5T6\",\"keyEmpty\":\"FoldableJson_keyEmpty__3URPz\",\"keyFoldable\":\"FoldableJson_keyFoldable__3UfAD\",\"keyMinus\":\"FoldableJson_keyMinus__2mcwk\",\"folded\":\"FoldableJson_folded__1dsXb\"};","import axios from 'axios';\n\nexport const MOCK_JSON = {\n    name: 'mocked response',\n    nested: {\n        obj: {a: false, b: null, c: true},\n        arr: [1, 2, 3],\n        arrObj: [{c: 2, d: 3, e: {f: 5}}, {m: 4}]\n    }\n};\n\nfunction timeout() {\n    return new Promise((resolve, reject) => {\n        const wait = setTimeout(() => {\n            reject();\n            clearTimeout(wait)\n        }, 2000);\n    })\n}\n\nexport function request(url) {\n    return Promise.race([axios.get(url), timeout()]).then(function (response) {\n        return response.data;\n    });\n}\n","\nexport function isPrimitiveType(val){\n    return typeof val !== 'object' || val === null;\n}","import React from 'react';\nimport {isPrimitiveType} from \"../utils/utils\";\nimport {FoldableJson} from './FoldableJson';\nimport styles from './FoldableJson.module.css';\n\nexport class JsonObject extends React.Component {\n    renderArray(json) {\n        const isPrimitiveArray = typeof json[0] !== 'object';\n        const {className} = this.props;\n\n        if (isPrimitiveArray) {\n            return <span className={className}>[{json.join(', ')}]</span>;\n        }\n\n        return (\n            <span className={className}>\n                [\n                <div className={styles.json}>\n                    {json.map((el, i) => {\n                        const lastElement = i === json.length - 1;\n                        return (\n                            <span className={styles.json} key={i}>\n                                <FoldableJson json={el} showComma={!lastElement}/>\n                            </span>\n                        );\n                    })}\n                </div>\n                ]\n            </span>\n        );\n    }\n\n    renderObject(json) {\n        const keysArr = Object.keys(json);\n        const {className} = this.props;\n\n        return (\n            <span className={className}>\n                {'{'}\n                <div className={styles.json}>\n                    {Object.keys(json).map((keyName, i) => {\n                        const lastElement = i === keysArr.length - 1;\n                        const el = json[keyName];\n\n                        return <FoldableJson json={el} keyName={keyName} key={i} showComma={!lastElement}/>;\n                    })}\n                </div>\n                {'}'}\n            </span>\n        );\n    }\n\n    renderPrimitive(json) {\n        const {className} = this.props;\n        const isLink = /^(https?:\\/\\/[^\\s]+)/g.test(json);\n\n        if (json === null) {\n            json = 'null';\n        }\n\n        if (typeof json === 'boolean') {\n            json = json.toString();\n        }\n\n        if (isLink) {\n            return <a className={className} href={json}>{json}</a>;\n        }\n        return <span className={className}>{json}</span>;\n    }\n\n    render() {\n        const {json} = this.props;\n\n        if (Array.isArray(json)) {\n            return this.renderArray(json);\n        }\n\n        if (!isPrimitiveType(json)) {\n            return this.renderObject(json);\n        }\n\n        return this.renderPrimitive(json);\n    }\n}\n","import classnames from 'classnames';\nimport React from 'react';\nimport {isPrimitiveType} from \"../utils/utils\";\nimport styles from './FoldableJson.module.css';\nimport {JsonObject} from './JsonObject';\n\nexport class FoldableJson extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {folded: false};\n    }\n\n    shouldComponentUpdate(newProps, newState) {\n        return newState.folded !== this.state.folded\n    }\n\n    fold() {\n        const foldable = !this.isPrimitive();\n        if (!foldable) {\n            return;\n        }\n        this.setState(s => ({folded: !s.folded}));\n    }\n\n    isPrimitive() {\n        const {json} = this.props;\n        return isPrimitiveType(json) || (Array.isArray(json) && isPrimitiveType(json[0]));\n    }\n\n    renderFoldedData() {\n        const {json} = this.props;\n        const {folded} = this.state;\n\n        const dotsClass = classnames({[styles.folded]: !folded});\n\n        if (!json) {\n            return null;\n        }\n        const foldedInfo = Array.isArray(json) ? `Array(${json.length})` : `Object(${Object.keys(json).length})`;\n        return <span className={dotsClass}>{foldedInfo}</span>;\n    }\n\n    renderKey() {\n        const {keyName} = this.props;\n        const isFoldable = !this.isPrimitive();\n        const {folded} = this.state;\n\n        const keyClass = classnames({\n            [styles.key]: true,\n            [styles.keyMinus]: !folded,\n            [styles.keyFoldable]: isFoldable,\n            [styles.keyEmpty]: !keyName\n        });\n\n        return (\n            <span className={keyClass} onClick={this.fold.bind(this)}>\n                {keyName ? `${keyName}:` : ''}\n            </span>\n        );\n    }\n\n    render() {\n        const {json, showComma, className} = this.props;\n\n        if (json === undefined) {\n            return <span></span>;\n        }\n\n        const {folded} = this.state;\n        const jsonClass = classnames({[styles.folded]: folded});\n\n        return (\n            <div className={`${styles.json} ${className || ''}`}>\n                {this.renderKey()}\n                {this.renderFoldedData()}\n                <JsonObject className={jsonClass} json={json}/>\n                {showComma && !folded ? ',' : null}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport styles from './UrlInputForm.module.css';\n\nexport class UrlInputForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {value: ''};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onFormSubmitted = this.props.onFormSubmitted;\n    }\n\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.onFormSubmitted(this.state.value);\n    }\n\n    render() {\n        const placeholder = 'http://url.to.get/json';\n\n        return (\n            <form className={styles.form} onSubmit={this.handleSubmit}>\n                <input className={styles.input}  placeholder={placeholder} type=\"text\" value={this.state.value} onChange={this.handleChange}/>\n                <button className={styles.btn} onClick={this.handleSubmit}>\n                    Go!\n                </button>\n            </form>\n        );\n    }\n}\n","import React from 'react';\nimport {MOCK_JSON, request} from \"./api/api\";\nimport {FoldableJson} from \"./FoldableJson/FoldableJson\";\nimport styles from './Json.module.css';\nimport {UrlInputForm} from \"./UrlInputForm/UrlInputForm\";\n\nexport class JsonViewer extends React.Component {\n    constructor() {\n        super();\n        this.state = {json: MOCK_JSON, error: false, loading: false};\n    }\n\n    onDataLoaded = t => {\n        this.setState(() => ({json: t, error: false, loading: false}));\n    };\n\n    onError = () => {\n        this.setState(() => ({json: null, error: true, loading: false}));\n    };\n\n    handleFormSubmitted = (src) => {\n        this.setState(() => ({loading: true}));\n\n        request(src)\n            .then(data => {\n                this.onDataLoaded(data);\n            })\n            .catch(() => this.onError());\n    };\n\n    renderLoader() {\n        if (!this.state.loading) {\n            return null;\n        }\n        return <span>Loading....</span>;\n    }\n\n    renderData() {\n        if (this.state.loading) {\n            return null;\n        }\n\n        return this.state.error\n            ? <div>Error loading</div>\n            : <FoldableJson className={styles.container} json={this.state.json}/>;\n    }\n\n\n    render() {\n        return (\n            <div className={styles.component}>\n                <UrlInputForm onFormSubmitted={this.handleFormSubmitted}/>\n                {this.renderLoader()}\n                {this.renderData()}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport {JsonViewer} from \"./JsonViewer\";\n\n\nexport class App extends React.Component {\n\n    render() {\n        const url = 'https://api.github.com/users/cakeinpanic/repos';\n        return (\n            <div>\n                <h1 className=\"header\">This is the demo for simple json viewer</h1>\n                <div className=\"sample\">For example you can insert url: <a href={url}>{url}</a></div>\n                <JsonViewer/>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}